<Window x:Class="Calendar.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Calendar"
        xmlns:ui="http://schemas.modernwpf.com/2019" 
        xmlns:properties="clr-namespace:Calendar.Properties"
        xmlns:t="http://schemas.telerik.com/2008/xaml/presentation" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:controls="clr-namespace:Windows.UI.Xaml.Controls;assembly=Windows.Foundation.UniversalApiContract"
        xmlns:models="clr-namespace:Calendar.Models" xmlns:viewmodels="clr-namespace:Calendar.ViewModels"
        xmlns:fw="clr-namespace:SourceChord.FluentWPF;assembly=FluentWPF"
        xmlns:gl="clr-namespace:System.Globalization;assembly=mscorlib"
        d:DataContext="{d:DesignInstance Type=viewmodels:NoteViewModel}"
        mc:Ignorable="d"
        AllowsTransparency="True"
        fw:AcrylicWindow.Enabled="True"
        WindowStyle="None"
        Title="MyOrganizer" Height="609" Width="297" Style="{DynamicResource WindowStyle}"
        Top="{Binding Source={x:Static properties:Settings.Default}, Path=Top}"
        Left="{Binding Source={x:Static properties:Settings.Default}, Path=Left}"
        Language="{Binding Source={x:Static properties:Settings.Default}, Path=Language, ConverterCulture={x:Static gl:CultureInfo.CurrentCulture}}"
        ui:ThemeManager.IsThemeAware="False"
        ShowInTaskbar="False"
        Loaded="Window_Loaded">
    <Window.Resources>
        <local:DateTimeToTimeConverter x:Key="timeConverter" />
        <local:EventTextConverter x:Key="textConverter" />
        <local:SelectedItemToVisibleConverter x:Key="VisibleConverter"/>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition></RowDefinition>
            <RowDefinition Height="0.7*"></RowDefinition>
        </Grid.RowDefinitions>
        <StackPanel>
            <Label Content="{Binding WeatherString}" Foreground="GhostWhite" Opacity="0.9" Height="18" HorizontalAlignment="Stretch" Margin="12,10,0,0" Grid.Row="0" VerticalAlignment="Stretch" FontFamily="Sans serif"/>
            <Calendar Name="calendar1" FontSize="30" Background="#00E0FFFF" HorizontalAlignment="Center" VerticalAlignment="Center" BorderBrush="#00000000" SelectedDate="{Binding SelectedDate}">
                <Calendar.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="{x:Static properties:Resources.ContextMenuNewEvent}" Command="{Binding AddEventCommand}" CommandParameter="{Binding SelectedDate}"></MenuItem>
                        <MenuItem Header="{x:Static properties:Resources.ContextMenuThemes}">
                            <MenuItem Header="{x:Static properties:Resources.ThemeHotPink}" Tag ="Pink"  Click="ThemeChange"></MenuItem>
                            <MenuItem Header="{x:Static properties:Resources.ThemeBlueWater}" Tag ="Blue" Click="ThemeChange"></MenuItem>
                            <MenuItem Header="{x:Static properties:Resources.ThemeWhite}" Tag ="White" Click="ThemeChange"></MenuItem>
                            <MenuItem Header="{x:Static properties:Resources.ThemeBlack}" Tag ="Black" Click="ThemeChange"></MenuItem>
                            <MenuItem Header="{x:Static properties:Resources.ThemeUSA}" Tag ="USA"  Click="ThemeChange"></MenuItem>
                            <MenuItem Header="Big Four">
                                <MenuItem Header="{x:Static properties:Resources.ThemeNHL}" Tag ="NHL"  Click="ThemeChange"></MenuItem>
                                <MenuItem Header="{x:Static properties:Resources.ThemeNBA}" Tag ="NBA"  Click="ThemeChange"></MenuItem>
                                <MenuItem Header="{x:Static properties:Resources.ThemeNFL}" Tag ="NFL"  Click="ThemeChange"></MenuItem>
                                <MenuItem Header="{x:Static properties:Resources.ThemeMLB}" Tag ="MLB"  Click="ThemeChange"></MenuItem>
                            </MenuItem>
                            
                        </MenuItem>
                        <MenuItem Header="{x:Static properties:Resources.ContextMenuSync}" Command="{Binding GoogleSyncCommand}"></MenuItem>

                    </ContextMenu>
                </Calendar.ContextMenu>
            </Calendar>
        </StackPanel>
        <TabControl Grid.Row="1" 
                    Background="Transparent">
            <TabControl.Resources>
                <Style TargetType="TabItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TabItem">
                                <Grid Name="Panel">
                                    <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="10"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="Panel" Property="Background" Value="White" />
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Setter Property="FontWeight" Value="SemiBold"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="False">
                                        <Setter Property="Foreground" Value="WhiteSmoke"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.Resources>
            <TabItem Header="Events" Opacity="0.6">
                <ListBox Name="EventsListBox" Background="#00000000" ItemsSource="{Binding Events}" Grid.Row="1" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 SelectedItem="{Binding SelectedEvent}"
                 Language="{Binding Source={x:Static properties:Settings.Default}, Path=Language, ConverterCulture={x:Static gl:CultureInfo.CurrentCulture}}">
                    <ListBox.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="{x:Static properties:Resources.ContextMenuNewEvent}" Command="{Binding AddEventCommand}" CommandParameter="{Binding SelectedDate}"></MenuItem>
                        </ContextMenu>
                    </ListBox.ContextMenu>
                    <ListBox.Style>
                        <Style TargetType="ListBox" BasedOn="{StaticResource {x:Type ListBox}}">
                            <Style.Triggers>
                                <!-- Use ListBox.HasItems instead of Binding -->
                                <Trigger Property="HasItems" Value="False">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Grid Background="Transparent">
                                                    <TextBlock HorizontalAlignment="Stretch" VerticalAlignment="Center" TextAlignment="Center" Text="{x:Static properties:Resources.ListboxNoEvents}"></TextBlock>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListBox.Style>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Tag" Value="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}" />
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu DataContext="{Binding DataContext}">
                                        <MenuItem Header="{x:Static properties:Resources.ContextMenuEditEvet}" Command="{Binding PlacementTarget.Tag.EditEventCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"></MenuItem>
                                        <MenuItem Header="{x:Static properties:Resources.ContextMenuDelete}" Command="{Binding PlacementTarget.Tag.DeleteEventCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"></MenuItem>
                                    </ContextMenu>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid Width="250" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.2*" ></ColumnDefinition>
                                    <ColumnDefinition Width="0.8*"></ColumnDefinition>
                                    <ColumnDefinition Width="0.2*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*"></RowDefinition>
                                </Grid.RowDefinitions>
                                <TextBlock Padding="5" Grid.Column="1" FontSize="14" Text="{Binding Title, Converter={StaticResource textConverter}, ConverterParameter='title'}" />
                                <TextBlock Padding="5" Grid.Column="2" FontSize="14" Text="{Binding Date, Converter={StaticResource timeConverter}}" />
                                <Expander Padding="5" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                                    <TextBlock TextWrapping="Wrap" Text="{Binding Description, Converter={StaticResource textConverter}, ConverterParameter='desc'}" />
                                </Expander>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </TabItem>
            <!--TEST-->
            <TabItem x:Name="CheckListTab" 
                     Header="Tasks" 
                     Opacity="0.6">
                <TabItem.DataContext>
                    <viewmodels:CheckListViewModel/>
                </TabItem.DataContext>
                <StackPanel>
                    <StackPanel>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                        </Grid>
                        <StackPanel Orientation="Horizontal">
                            <ComboBox Name="ChkListCmbBox" 
                                  Grid.Row="0" 
                                  Width="240"
                                  Margin="10,5"
                                  Opacity="0.9"
                                  ItemsSource="{Binding CheckLists, UpdateSourceTrigger=PropertyChanged}"
                                  IsSynchronizedWithCurrentItem="True"
                                  SelectedItem="{Binding SelectedCheckList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="0">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding CheckListText}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Delete TaskList" 
                                                  Command="{Binding DeleteCheckListsCommand}">
                                        </MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                                <ComboBox.Style>
                                    <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                                        <Style.Triggers>
                                            <Trigger Property="HasItems" Value="False">
                                                <Setter Property="Visibility" Value="Hidden">
                                                </Setter>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ComboBox.Style>
                            </ComboBox>
                            <Button Content="+"
                                    Background="Transparent"
                                    Height="35"
                                    FontSize="16"
                                    FontWeight="ExtraBold"
                                    Command="{Binding AddCheckListsCommand}"
                                    HorizontalAlignment="Right">
                            </Button>
                        </StackPanel>
                        <Expander Header="Add Task"
                                  Width="285"
                                  Opacity="0.8"
                                  HorizontalAlignment="Center"
                                  HorizontalContentAlignment="Center"
                                  Visibility="{Binding ElementName=ChkListCmbBox, Path=SelectedItem, Converter={StaticResource VisibleConverter}}"
                                  VerticalAlignment="Top"
                                  ExpandDirection="Down">
                            <StackPanel Orientation="Horizontal">
                                <TextBox x:Name="ChkLstItemText2"
                                 Text="{Binding CheckListItemText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                 AcceptsReturn="False" 
                                 TextWrapping="Wrap"
                                 Width="220"
                                 Margin="5"
                                 HorizontalAlignment="Stretch">
                                    <TextBox.InputBindings>
                                        <KeyBinding Command="{Binding DataContext.AddCheckListItem, Mode=OneWay, ElementName=ChkListCmbBox}" 
                                                    CommandParameter="{Binding Text, ElementName=ChkLstItemText2}" 
                                                    Key="Return" />
                                    </TextBox.InputBindings>
                                </TextBox>
                                <Button Content="Add" 
                                        Margin="5"
                                        Width="50"
                                        HorizontalAlignment="Center"
                                        Command="{Binding ElementName=CheckListTab, Path=DataContext.AddCheckListItem, Mode=OneWay}"
                                        CommandParameter="{Binding Text, ElementName=ChkLstItemText2}"/>
                            </StackPanel>
                        </Expander>
                    </StackPanel>
                    <ScrollViewer>
                        <ListBox x:Name="CheckListItems2"
                             Margin="10"
                             MaxHeight="100"
                             ItemsSource="{Binding SelectedCheckList.Items, Mode=TwoWay}" 
                             HorizontalContentAlignment="Stretch"  
                             VerticalAlignment="Stretch"
                             Background="Transparent"
                             SelectedItem="{Binding CheckListItem}">
                            <ListBox.Style>
                                <Style TargetType="ListBox" 
                                   BasedOn="{StaticResource {x:Type ListBox}}">
                                    <Style.Triggers>
                                        <Trigger Property="HasItems" 
                                                 Value="False">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <TextBlock Padding="20" 
                                                               HorizontalAlignment="Stretch" 
                                                               VerticalAlignment="Stretch" 
                                                               TextAlignment="Center">No Tasks</TextBlock>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ListBox.Style>

                            <ListBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ListBoxItem}">
                                    <Setter Property="Background" 
                                        Value="Transparent" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                <ContentPresenter />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <CheckBox Name="ItemCheckBox2"
                                              Opacity="0.9"
                                              IsChecked="{Binding Checked}" 
                                              Command="{Binding ElementName=CheckListTab, Path=DataContext.CheckedChangeCommand}" 
                                              FontSize="15"
                                              Width="235"
                                              HorizontalAlignment="Stretch"
                                              HorizontalContentAlignment="Stretch"
                                              VerticalContentAlignment="Stretch">
                                            <TextBlock FontSize="15"
                                                   HorizontalAlignment="Left"
                                                   VerticalAlignment="Stretch"
                                                   Text="{Binding Text}">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsChecked, ElementName=ItemCheckBox2}" 
                                                                     Value="True">
                                                                <Setter Property="TextBlock.TextDecorations" 
                                                                    Value="Strikethrough" />
                                                                <Setter Property="Opacity" 
                                                                    Value="0.5"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </CheckBox>
                                        <Button Content="x"
                                                Background="Transparent"
                                                Height="35"
                                                Opacity="0.6"
                                                Command="{Binding ElementName=CheckListTab, Path=DataContext.DeleteCheckListItem}"
                                                CommandParameter="{Binding}"
                                                HorizontalAlignment="Right">
                                        </Button>
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </ScrollViewer>
                </StackPanel>
            </TabItem>
            <TabItem Header="{x:Static properties:Resources.LableNotes}" Opacity="0.6">
                <ListBox Name="NotesListBox" Background="#00000000" ItemsSource="{Binding Notes}" Grid.Row="1" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 SelectedItem="{Binding SelectedNote}" ScrollViewer.CanContentScroll="False" d:DataContext="{d:DesignInstance Type=viewmodels:NoteViewModel}">
                    <ListBox.DataContext>
                        <viewmodels:NoteViewModel/>
                    </ListBox.DataContext>
                    <ListBox.Style>
                        <Style TargetType="ListBox" BasedOn="{StaticResource {x:Type ListBox}}">
                            <Style.Triggers>
                                <!-- Use ListBox.HasItems instead of Binding -->
                                <Trigger Property="HasItems" Value="False">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Grid Background="Transparent">
                                                    <TextBlock Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Center" TextAlignment="Center" Text="{x:Static properties:Resources.NotsNoNots}"></TextBlock>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListBox.Style>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Tag" Value="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}" />
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu DataContext="{Binding DataContext}">
                                        <MenuItem Header="{x:Static properties:Resources.EditNote}" Command="{Binding PlacementTarget.Tag.EditNoteCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"></MenuItem>
                                        <MenuItem Header="{x:Static properties:Resources.DeleteNote}" Command="{Binding PlacementTarget.Tag.DeleteNoteCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"></MenuItem>
                                        <MenuItem Header="{x:Static properties:Resources.NewNote}" Command="{Binding PlacementTarget.Tag.AddNoteCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"></MenuItem>
                                    </ContextMenu>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="{x:Static properties:Resources.NewNote}" Command="{Binding AddNoteCommand}"></MenuItem>
                            
                        </ContextMenu>
                    </ListBox.ContextMenu>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid Width="250" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.2*" ></ColumnDefinition>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition ></RowDefinition>
                                </Grid.RowDefinitions>
                                <TextBlock Padding="5" Grid.Column="1" FontSize="14" Text="{Binding NoteTitle}" >
                                </TextBlock>
                                <Expander Padding="5" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                                    <TextBlock Padding="5" HorizontalAlignment="Left" VerticalAlignment="Top" TextWrapping="Wrap" Width="210" FontSize="14" Text="{Binding NoteText}" >
                                    </TextBlock>
                                </Expander>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
